name: Android Integration Tests

on:
  pull_request:
    branches:
      - master

jobs:
  android-build:
    name: Android Integration Tests
    runs-on: ubuntu-latest

    steps:
      - name: Extract branch name
        shell: bash
        run: echo "branch=$(echo ${GITHUB_REF#refs/heads/})" >>$GITHUB_OUTPUT
        id: extract_branch

      # clone the repo to workspace
      - name: Check out Git repository
        uses: actions/checkout@v2

      # setup JDK environment
      - name: Set up our JDK environment
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 11

      # setup node environment
      - name: Install NodeJS
        uses: actions/setup-node@v3
        with:
          node-version: '18.17.1'
          cache: 'yarn'

      # install project dependencies
      - name: Install dependencies for lib
        run: yarn install --frozen-lockfile

      - name: Install dependencies for TestApp
        run: cd TestApp && yarn install --frozen-lockfile && cd ..

      ## configure cache for gradle
      - name: Cache Gradle Wrapper
        uses: actions/cache@v2
        with:
          path: ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}

      - name: Cache Gradle Dependencies
        uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-caches-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-caches-

      ## make gradlew executable in ci
      - name: Make Gradlew Executable
        run: cd android && chmod +x ./gradlew

      - name: Bundle JS for Android
        run: cd TestApp && mkdir android/app/src/main/assets && yarn bundle:android-dev && cd ..

      - name: Build Android Test App
        run: cd TestApp/android && ./gradlew clean && ./gradlew app:assembleDebug

      ## make gradlew executable in ci
      - name: Make Gradlew Executable
        run: cd integration-tests && chmod +x ./gradlew

      - name: Upload Android Test App for Integration Tests
        env:
          BROWSERSTACK_USER: ${{ secrets.BROWSERSTACK_USER }}
          BROWSERSTACK_PASSWORD: ${{ secrets.BROWSERSTACK_PASSWORD }}
          BRANCH_NAME: ${{ steps.extract_branch.outputs.branch }}
        run: curl -u $BROWSERSTACK_USER:$BROWSERSTACK_PASSWORD -X POST https://api-cloud.browserstack.com/app-automate/upload -F file=@TestApp/android/app/build/outputs/apk/debug/app-debug.apk -F "data={\"custom_id\":\"INAPP_RN_SDK_ANDROID_TEST_APP\"}"

      - name: Run Android Integration Tests
        env:
          BROWSERSTACK_USER: ${{ secrets.BROWSERSTACK_USER }}
          BROWSERSTACK_PASSWORD: ${{ secrets.BROWSERSTACK_PASSWORD }}
          BRANCH_NAME: ${{ steps.extract_branch.outputs.branch }}
        run: ./integration-tests/gradlew -p integration-tests :test --tests TestSuite -Dbrowserstack.username="$BROWSERSTACK_USER" -Dbrowserstack.password="$BROWSERSTACK_PASSWORD" -Dbuild.name="$BRANCH_NAME@$GITHUB_SHA" -Dbuild.platform="Android"


